export interface RGB {
    r: number;
    g: number;
    b: number;
}
export interface RGBA extends RGB {
    a?: number;
}
export interface HSV {
    h: number;
    s: number;
    v: number;
}
export interface HSVA extends HSV {
    a?: number;
}
export interface HSL {
    h: number;
    s: number;
    l: number;
}
export interface HSLA extends HSL {
    a?: number;
}
export default class Color {
    protected _hue: number;
    protected _saturation: number;
    protected _value: number;
    protected _alpha: number;
    protected names: {
        'AliceBlue': string;
        'AntiqueWhite': string;
        'Aqua': string;
        'Aquamarine': string;
        'Azure': string;
        'Beige': string;
        'Bisque': string;
        'Black': string;
        'BlanchedAlmond': string;
        'Blue': string;
        'BlueViolet': string;
        'Brown': string;
        'BurlyWood': string;
        'CadetBlue': string;
        'Chartreuse': string;
        'Chocolate': string;
        'Coral': string;
        'CornflowerBlue': string;
        'Cornsilk': string;
        'Crimson': string;
        'Cyan': string;
        'DarkBlue': string;
        'DarkCyan': string;
        'DarkGoldenRod': string;
        'DarkGray': string;
        'DarkGrey': string;
        'DarkGreen': string;
        'DarkKhaki': string;
        'DarkMagenta': string;
        'DarkOliveGreen': string;
        'DarkOrange': string;
        'DarkOrchid': string;
        'DarkRed': string;
        'DarkSalmon': string;
        'DarkSeaGreen': string;
        'DarkSlateBlue': string;
        'DarkSlateGray': string;
        'DarkSlateGrey': string;
        'DarkTurquoise': string;
        'DarkViolet': string;
        'DeepPink': string;
        'DeepSkyBlue': string;
        'DimGray': string;
        'DimGrey': string;
        'DodgerBlue': string;
        'FireBrick': string;
        'FloralWhite': string;
        'ForestGreen': string;
        'Fuchsia': string;
        'Gainsboro': string;
        'GhostWhite': string;
        'Gold': string;
        'GoldenRod': string;
        'Gray': string;
        'Grey': string;
        'Green': string;
        'GreenYellow': string;
        'HoneyDew': string;
        'HotPink': string;
        'IndianRed': string;
        'Indigo': string;
        'Ivory': string;
        'Khaki': string;
        'Lavender': string;
        'LavenderBlush': string;
        'LawnGreen': string;
        'LemonChiffon': string;
        'LightBlue': string;
        'LightCoral': string;
        'LightCyan': string;
        'LightGoldenRodYellow': string;
        'LightGray': string;
        'LightGrey': string;
        'LightGreen': string;
        'LightPink': string;
        'LightSalmon': string;
        'LightSeaGreen': string;
        'LightSkyBlue': string;
        'LightSlateGray': string;
        'LightSlateGrey': string;
        'LightSteelBlue': string;
        'LightYellow': string;
        'Lime': string;
        'LimeGreen': string;
        'Linen': string;
        'Magenta': string;
        'Maroon': string;
        'MediumAquaMarine': string;
        'MediumBlue': string;
        'MediumOrchid': string;
        'MediumPurple': string;
        'MediumSeaGreen': string;
        'MediumSlateBlue': string;
        'MediumSpringGreen': string;
        'MediumTurquoise': string;
        'MediumVioletRed': string;
        'MidnightBlue': string;
        'MintCream': string;
        'MistyRose': string;
        'Moccasin': string;
        'NavajoWhite': string;
        'Navy': string;
        'OldLace': string;
        'Olive': string;
        'OliveDrab': string;
        'Orange': string;
        'OrangeRed': string;
        'Orchid': string;
        'PaleGoldenRod': string;
        'PaleGreen': string;
        'PaleTurquoise': string;
        'PaleVioletRed': string;
        'PapayaWhip': string;
        'PeachPuff': string;
        'Peru': string;
        'Pink': string;
        'Plum': string;
        'PowderBlue': string;
        'Purple': string;
        'RebeccaPurple': string;
        'Red': string;
        'RosyBrown': string;
        'RoyalBlue': string;
        'SaddleBrown': string;
        'Salmon': string;
        'SandyBrown': string;
        'SeaGreen': string;
        'SeaShell': string;
        'Sienna': string;
        'Silver': string;
        'SkyBlue': string;
        'SlateBlue': string;
        'SlateGray': string;
        'Snow': string;
        'SpringGreen': string;
        'SteelBlue': string;
        'Tan': string;
        'Teal': string;
        'Thistle': string;
        'Tomato': string;
        'Turquoise': string;
        'Violet': string;
        'Wheat': string;
        'White': string;
        'WhiteSmoke': string;
        'Yellow': string;
        'YellowGreen': string;
    };
    protected lowerNames: any;
    protected error(): void;
    protected isset(): boolean;
    clone(): Color;
    css(): string;
    fromName(name: string): this;
    fromHex(hex: string): this;
    fromRGB(r: number, g: number, b: number): this;
    fromRGBA(r: number, g: number, b: number, a: number): this;
    fromHSL(h: number, s: number, l: number): this;
    fromHSLA(h: number, s: number, l: number, a: number): this;
    fromHSV(h: number, s: number, v: number): this;
    fromHSVA(h: number, s: number, v: number, a: number): this;
    fromColor(color: Color): Color;
    toName(): string;
    toHex(): string;
    toRGB(): RGB;
    toRGBA(): RGBA;
    toHSV(): HSV;
    toHSVA(): HSVA;
    toHSL(): HSL;
    toHSLA(): HSLA;
    protected restrict(value: number, min: number, max: number): number;
    protected restrict1bit(value: number): number;
    protected restrict8bit(value: number): number;
    fade(percent: number): this;
    rotate(degrees: number): this;
    saturate(percent: number): this;
    desaturate(percent: number): this;
    lighten(percent: number): this;
    darken(percent: number): this;
    addRed(percent: number): this;
    addGreen(percent: number): this;
    addBlue(percent: number): this;
    setAlpha(alpha: number): this;
    alpha: number;
    setRed(value: number): this;
    red: number;
    setGreen(value: number): this;
    green: number;
    setBlue(value: number): this;
    blue: number;
    setHue(hue: number): this;
    hue: number;
    setSaturation(saturation: number): this;
    invertSaturation(): this;
    saturation: number;
    setValue(value: number): this;
    invertValue(): this;
    value: number;
    setLightness(lightness: number): this;
    invertLightness(): this;
    lightness: number;
    toString(): string;
    static random(): Color;
    static fromName(name: string): Color;
    static fromHex(hex: string): Color;
    static fromRGB(r: number, g: number, b: number): Color;
    static fromRGBA(r: number, g: number, b: number, a: number): Color;
    static fromHSL(h: number, s: number, l: number): Color;
    static fromHSLA(h: number, s: number, l: number, a: number): Color;
    static fromHSV(h: number, s: number, v: number): Color;
    static fromHSVA(h: number, s: number, v: number, a: number): Color;
    static fromColor(color: Color): Color;
}
